
Table of Content
     Chapter 5: Python Show and Tell
          - Video 1: Introduction to Python
          - Video 2: Saving data with Python
          - Video 3: Making decisions with Python
          - Video 4: Functions in Python

     Chapter 6: Working with Python
          - Video 1: Introduction to object-oriented programming
          - Video 2: Creating and using a class
          - Video 3: How to organize your code
          - Video 4: Adding modules to your programs
          - Video 5: How Python is used in the real world




***********************************************
Chapter: 5. Python Show and Tell
***********************************************


-----------------------------------------------
Video: Introduction to Python
-----------------------------------------------
Note Time:         Note Text:                     

0:00:30            at recording time, the top five are Java, Python, JavaScript, C++, and C#. 

Python is ideal for beginners:
     - it has few syntax requirements. 
     - it is more concise meaning it takes fewer lines of code to get things done. 
     - it was designed to be a General purpose language. this means you can use it to create web applications, perform scientific analysis, create games, and more. 


-----------------------------------------------
Video: Saving data with Python
-----------------------------------------------
Note Time:         Note Text:                     

0:00:02            How to display values in python:
     print("Hello!")

     print('Hello again')
     print(42)


we can print string values, we can print number values, python add a new line automatically for us, spaces inbetween our statements are ignored. 

0:02:42            Basic Python Syntax
     - declaring a variable
     - creating a comment
     - usable variable names

     # The user's score
     score = 750
     print(score)

     # My favorite snack
     favorite_snack = "Cookies"
     print(favorite_snack) 


-----------------------------------------------
Video: Making decisions with Python
-----------------------------------------------
Note Time:         Note Text:                     

0:00:50            With computers there is less ambiguity. there is not maybe. there is YES or NO, TRUE of FALSE.

Any expression that breaks down to either true or false is called a conditional or boolean expression. 


-----------------------------------------------
Video: Functions in Python
-----------------------------------------------
Note Time:         Note Text:                     

0:03:38            DRY is a core principle of software development that stands for don't repeat yourself. 


Programmers attempt to write simple, easy to read, and unrepetitive code. 
Functions help us do this. A function is a block of code grouped together with a name that does something. This is a core feature of all programming languages. 


This is how we write a function in python
     def say_hello(name):
          print(f"Hello, {name}!")

     say_hello('Tiffany')
     say_hello('Mya')
     say_hello('Andrea')

     - the def keyword
     - the function name
     - the function input variable
     - the function body (printing a formated string value - merging a string with a variable value)
     - the function call 


***********************************************
Chapter: 6. Working with Python
***********************************************


-----------------------------------------------
Video: Introduction to object-oriented programming
-----------------------------------------------
Note Time:         Note Text:                     

0:02:35            Bugs are just the worst.

programmers have developed various strategies to help reduce the number of bugs in their code. 

One such strategy is known as object-oriented programming. 

OOP: What it is
     - oop involves using code to represent real world things and situations. 
     - it specifies the blueprint of an object. what will be it characteristics, what can it do.


OOP: How it works
     - think of a puppy. it has a name, an owner, a breed, and maybe even a favorite toy. What do they do? They can sit, play, and sleep. 
     - a puppy would be represented as a class with certain properties and functions. A class is a blueprint for how other objects should be created.
     - once we have the class we can now create a puppy named 'Marble', another one named 'Onyx'.
     - Marble & Onyx are referred to as object of the class Puppy or instances of the class.
     - They would have unique names, breeds, owners, and favorite toys. Moreover, Onyx could be playing while Marble is sitting 


OOP: How it reduces bugs
     - what is the benefit of structuring code this way? 
     - one major benefit is that it helps to isolate code changes. 
     - if we set an action for all puppies to take when they play like roll-over, and then later we want to change this action to lie-down,
     - with object-oriented programming, We only need to make the changes in one place. 
     - additionally, this type of programming style has wide adoption across programming languages. this means you will be able to find numerous resources and examples to aid you in learning the concepts. 


By adding object-oriented programming to your arsenal, you'll be able to develop more flexible software with fewer bugs. 


-----------------------------------------------
Video: Creating and using a class
-----------------------------------------------
Note Time:         Note Text:                     

0:04:03            Object-oriented programming represents real-world things and situations with classes. 
A class is a blueprint for how other objects should be created. 


Creating Class in Python: 
          class Puppy(): 
               def __init__(self, name, favorite_toy):
                    self.name = name
                    self.favorite_toy = favorite_toy
               def play(self):
                    print(self.name + " is playing with the " + self.favorite_toy)

           - the class keyword
           - the class name
           - the init function and its job (assign values to any variables that we need for our class to work)
           - the class variables
           - the class functionality


Creating Instances/Object of our Class in Python
     - class definition is only the blueprint. 
     - we have to build something using the blueprint. 
     - we have to create an instance/ an object of the class. 

     marble = Puppy('Marble', 'teddy bear')
     marble.play()

     - the class instance name
     - the class instance initialization (specify its variables)
     - the class instance performing an action 


-----------------------------------------------
Video: How to organize your code
-----------------------------------------------
Note Time:         Note Text:                     

0:01:19            Modules

Your files can get long and unruly as you add more code to your classes. 
To keep things neat and organized, it's best to store your classes in modules. 

A module is a file consisting of Python code. It can define functions, classes, variables, and more.


Advantages of Modular Code:
     - there are several advantages to breaking up code in a large application. 
     - Simplicity. 
            * a module typically focuses on one piece of the software puzzle. 
            * development becomes easier and less error-prone, 
            * no overwhelm. you work piece by piece.

     - Maintainability, 
            * if modules are written with little dependency between them, 
            * it's easier to make changes that won't impact other parts of the program. 
            * a great way to support collaboration, reducing the chances of conflicts when changes are made. 

     - Reusability. 
            * with modules, you open the door to reuse that code in other places throughout your application. 


Remember, programmers aim for code that adheres to the DRY principle of don't repeat yourself. By using modules, you'll be keeping with the overall Python philosophy of clean, uncluttered code. 


-----------------------------------------------
Video: Adding modules to your programs
-----------------------------------------------
Note Time:         Note Text:                     

0:03:04            Adding modules to your code not only helps with readability and maintainability, it aids you in expanding the capabilities of your programs by taking advantage of code already vetted by other programmers.


The Python standard library is a set of modules that you get with every Python installation. 
so you can use code other programmers have written to handle more complex logic in your own programs. 


Take for instance the python random module
           import random

           numbers = [1, 2, 3, 4, 5]
           
           random.shuffle(numbers)
           print(numbers)    # result: [3, 2, 4, 5, 1]

           number = random.choice(numbers)
           print(number).     # result: 2
  
           - import the module to access the module functionality
           - access functionalities in the module 


-----------------------------------------------
Video: How Python is used in the real world
-----------------------------------------------
Note Time:         Note Text:                     

0:01:28            Python is capable of handling almost any software development requirement. 
It heads libraries and packages for web browsers, databases, image manipulation, email, and much more. 
This makes Python ideal for various real-world projects. 


Real World Projects Like What:
          - Web Development: 
                   * Django is one of the most used Python web frameworks. 
                   * It allows teams to not only create websites quickly 
                   * but to keep scaling them for millions of new users.
                   * Spotify, Discus and Instagram use django

          - Animation:
                   * blender is a free and open source tool
                   * used for 3D modeling, texturing, and animation. 
                   * It is powered by Python 
                   * it even exposes a way for programmers to create animations using Python code. 

          - Image Manipulation:  
                   * python is known for having numerous libraries that specialize in image manipulation.  
                   * the Scikit-Image library is used for analysis of medical images  
                   * it can classify images for object detection in machine learning applications. 

          - Machine Learning: 
                   * Python's use in machine learning and artificial intelligence  
                   * has caused it to explode in popularity over the past several years.  
                   * Pandas is a data analysis and manipulation tool. 
                   * you can process large amounts of data from various sources
                   * it's built on top of the Python programming language. 
                   * and it is used by machine learning engineers


Python's ease of use, simplicity, and security make it a go-to language for software development. 

